---

- hosts: proxy_node

  tasks:

    - name: Set environmental settings when proxy host list exists
      block:

      - name: Configure environment
        import_role:
          name: configure-environment

      - name: Reset ssh connection
        meta: reset_connection

      when: 0


- hosts: proxy_node
   
  tasks:

    - name: "Open proxy firewall"
      import_role:
        name: configure-firewall


- hosts: remote_nodes

  environment:
    http_proxy: "{{ lookup('env', 'http_proxy') | default(omit) }}"
    https_proxy: "{{ lookup('env', 'https_proxy') | default(omit) }}"
    no_proxy: "{{ lookup('env', 'no_proxy') | default(omit) }}"
    HTTP_PROXY: "{{ lookup('env', 'HTTP_PROXY') | default(omit) }}"
    HTTPS_PROXY: "{{ lookup('env', 'HTTPS_PROXY') | default(omit) }}"
    NO_PROXY: "{{ lookup('env', 'NO_PROXY') | default(omit) }}"

  vars:
    # override geerlingguy.docker default vars
    docker_install_compose: no
    docker_users: [
      "{{ ansible_user_id }}"
    ]

    # local http_proxy
    http_proxy: "{{ lookup('env', 'http_proxy') | default(omit) }}"
    https_proxy: "{{ lookup('env', 'https_proxy') | default(omit) }}"
    no_proxy: "{{ lookup('env', 'no_proxy') | default(omit) }}"
    # to get remote, use {{ ansible_env.http_proxy }}

  pre_tasks:


  tasks:
  
    - name: "Run debug tasks"
      import_role:
        name: run-debug-tasks

    - name: "Test proxy by getting a file"
      import_role:
        name: get-file
      when: 1

    - name: "Test proxy by installing a package"
      import_role:
        name: install-pkg
      when: 1

    - name: "Set python modules for pip to install"
      set_fact:
        pip_install_packages: [
          { 'name': 'docker', 'state': 'latest' }
        ]

    - name: "Test proxy by installing pip and python modules"
      become: yes
      import_role:
        name: geerlingguy.pip
      when: 1

    - name: "Install Docker"
      become: yes
      import_role:
        name: geerlingguy.docker
      when: 1

    - name: "Configure Docker"
      become: yes
      import_role:
        name: configure-docker
      when: 1

    - name: "Run docker image"
      import_role:
        name: run-portainer
      when: 1
      